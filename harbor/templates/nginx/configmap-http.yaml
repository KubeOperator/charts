{{- if and (ne .Values.service.type "Ingress") (not .Values.service.tls.enabled) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "harbor.nginx" . }}
  labels: {{- include "harbor.labels" . | nindent 4 }}
data:
  nginx.conf: |+
    worker_processes auto;

    events {
      worker_connections 1024;
      use epoll;
      multi_accept on;
    }

    http {
      tcp_nodelay on;

      # this is necessary for us to be able to disable request buffering in all cases
      proxy_http_version 1.1;

      upstream core {
        server {{ template "harbor.core" . }};
      }

      upstream portal {
        server {{ template "harbor.portal" . }};
      }

      log_format timed_combined '$remote_addr - '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '$request_time $upstream_response_time $pipe';

      access_log /dev/stdout timed_combined;

      client_body_temp_path  "/opt/bitnami/nginx/tmp/client_body" 1 2;
      proxy_temp_path        "/opt/bitnami/nginx/tmp/proxy" 1 2;
      fastcgi_temp_path      "/opt/bitnami/nginx/tmp/fastcgi" 1 2;
      scgi_temp_path         "/opt/bitnami/nginx/tmp/scgi" 1 2;
      uwsgi_temp_path        "/opt/bitnami/nginx/tmp/uwsgi" 1 2;

      server {
        listen 8080;
        server_tokens off;
        # disable any limits to avoid HTTP 413 for large image uploads
        client_max_body_size 0;

        location / {
          proxy_pass http://portal/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          {{- if not .Values.nginx.behindReverseProxy }}
          proxy_set_header X-Forwarded-Proto $scheme;
          {{- end }}

          proxy_buffering off;
          proxy_request_buffering off;
        }

        location /api/ {
          proxy_pass http://core/api/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          {{- if not .Values.nginx.behindReverseProxy }}
          proxy_set_header X-Forwarded-Proto $scheme;
          {{- end }}

          proxy_buffering off;
          proxy_request_buffering off;
        }

        location /chartrepo/ {
          proxy_pass http://core/chartrepo/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          {{- if not .Values.nginx.behindReverseProxy }}
          proxy_set_header X-Forwarded-Proto $scheme;
          {{- end }}

          proxy_buffering off;
          proxy_request_buffering off;
        }

        location /c/ {
          proxy_pass http://core/c/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          {{- if not .Values.nginx.behindReverseProxy }}
          proxy_set_header X-Forwarded-Proto $scheme;
          {{- end }}

          proxy_buffering off;
          proxy_request_buffering off;
        }

        location /v1/ {
          return 404;
        }

        location /v2/ {
          proxy_pass http://core/v2/;
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          {{- if not .Values.nginx.behindReverseProxy }}
          proxy_set_header X-Forwarded-Proto $scheme;
          {{- end }}

          proxy_buffering off;
          proxy_request_buffering off;
        }

        location /service/ {
          proxy_pass http://core/service/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          {{- if not .Values.nginx.behindReverseProxy }}
          proxy_set_header X-Forwarded-Proto $scheme;
          {{- end }}

          proxy_buffering off;
          proxy_request_buffering off;
        }

      location /service/notifications {
          return 404;
        }
      }
    }
{{- end }}
